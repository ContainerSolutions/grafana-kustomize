apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana-kustomize
  labels:
    app: grafana
    chart: grafana-4.0.4
    release: grafana
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      release: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        release: grafana
      annotations:
        checksum/config: b1fa94fcc3e1229f1dc581735725ba162a880187e9573ac60f7a550965cc8ac1
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: aa72d14bc4925841f289b44b9337666e47b6875eb43f13e539a312d2aa12aa55
    spec:
      
      serviceAccountName: grafana
      $patch: replace
      securityContext: {}
        
      containers:
        - name: grafana
          image: "grafana/grafana:6.4.2"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: datasources.yaml
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-password
            - name: GF_INSTALL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  name: grafana
                  key: plugins
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
            
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            
          resources:
            {}
            
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: storage
          emptyDir: {}